<launch>
    <!-- COMMON -->
    <!-- Settings for "output" parameter of nodes -->
    <arg name="ROS_OUTPUT" default="screen" />
    <!-- Debug mode. Enabled output images publishing after object detection -->
    <arg name="DEBUG" default="false" />
    <!-- Enables video streaming -->
    <arg name="STREAM" default="false" />
    <!-- SHOW camera image -->
    <arg name="SHOW" default="false" />
    <!-- Enables connection with simulator -->
    <arg name="SIMULATION" default="false" />
    <!-- Enables connection with hardware -->
    <arg name="HARDWARE_CONNECTION" default="false" />

    <!-- VISION -->
    <!-- Enables raw video recording -->
    <arg name="RECORD_RAW" default="false" />
    <!-- Enables output video recording -->
    <arg name="RECORD_OUTPUT" default="false" />
    <!-- Directory where to save videos -->
    <arg name="RECORD_DIR" default="$(env HOME)/stingray_video_records/" />

    <!-- OBJECT DETECTION -->
    <!-- Package name with weights -->
    <arg name="WEIGHTS_PACKAGE_NAME" default="sauvc_vision" />
    
    <!-- CAMERA NAMES -->
    <arg name="FRONT_CAMERA" default="front_camera" unless="$(arg SIMULATION)"/>
    <arg name="BOTTOM_CAMERA" default="bottom_camera" unless="$(arg SIMULATION)"/>
    
    <arg name="FRONT_CAMERA_TOPIC" default="/$(arg FRONT_CAMERA)/image_raw" unless="$(arg SIMULATION)"/>
    <arg name="BOTTOM_CAMERA_TOPIC" default="/$(arg BOTTOM_CAMERA)/image_raw" unless="$(arg SIMULATION)"/>

    <arg name="FRONT_CAMERA" default="camera_front" if="$(arg SIMULATION)"/>
    <arg name="BOTTOM_CAMERA" default="camera_bottom" if="$(arg SIMULATION)"/>
    
    <arg name="FRONT_CAMERA_TOPIC" default="/rov_model_urdf/$(arg FRONT_CAMERA)/image_raw" if="$(arg SIMULATION)"/>
    <arg name="BOTTOM_CAMERA_TOPIC" default="/rov_model_urdf/$(arg BOTTOM_CAMERA)/image_raw" if="$(arg SIMULATION)"/>

    <!-- CAMERA PATHS -->
    <arg name="FRONT_CAMERA_PATH" default="/dev/v4l/by-path/platform-3530000.xhci-usb-0:2.4:1.0-video-index0"/>
    <arg name="BOTTOM_CAMERA_PATH" default="/dev/v4l/by-path/platform-3530000.xhci-usb-0:2.3:1.0-video-index0"/>

    <!-- QR TRIGGER -->
    <!-- Enable launch with qr codes -->
    <arg name="QR_LAUNCH" default="false" />
    <!-- Camera topic for qr code reader -->
    <arg name="QR_CAMERA" default="$(arg FRONT_CAMERA_TOPIC)" />
    <!-- Package name with launch files -->
    <arg name="QR_LAUNCH_PACKAGE_NAME" default="sauvc_startup" />
    <!-- Filename pattern -->
    <arg name="QR_NAME_PATTERN" default="sauvc_qr_" />

    <!-- MISSIONS -->
    <arg name="GATE" default="false" />
    <arg name="FLARE" default="false" />
    <arg name="DRUMS" default="False" />
    <arg name="QUAL" default="False" />
    <arg name="TEST" default="False" />
    <arg name="VERBOSE" default="false" />

    <!-- FRONT CAMERA -->
    <include file="$(find stingray_startup)/launch/camera.launch">
        <arg name="REAL_CAM" value="true" unless="$(arg SIMULATION)"/>
        <arg name="SIMULATION_CAM" value="true" if="$(arg SIMULATION)"/>

        <arg name="CAMERA_NAME" value="$(arg FRONT_CAMERA)" />
        <arg name="CAMERA_PATH" value="$(arg FRONT_CAMERA_PATH)" />
        <arg name="CAMERA_TOPIC" value="$(arg FRONT_CAMERA_TOPIC)" />

        <arg name="ROS_OUTPUT" value="$(arg ROS_OUTPUT)" />
        <arg name="SHOW" value="$(arg SHOW)" />
        <arg name="DEBUG" value="$(arg DEBUG)" />
        <arg name="RECORD_RAW" value="$(arg RECORD_RAW)" />
        <arg name="RECORD_OUTPUT" value="$(arg RECORD_OUTPUT)" />
        <arg name="RECORD_DIR" value="$(arg RECORD_DIR)" />
    </include>

    <!-- BOTTOM CAMERA -->
    <include file="$(find stingray_startup)/launch/camera.launch">
        <arg name="REAL_CAM" value="true" unless="$(arg SIMULATION)"/>
        <arg name="SIMULATION_CAM" value="true" if="$(arg SIMULATION)"/>

        <arg name="CAMERA_NAME" value="$(arg BOTTOM_CAMERA)" />
        <arg name="CAMERA_PATH" value="$(arg BOTTOM_CAMERA_PATH)" />
        <arg name="CAMERA_TOPIC" value="$(arg BOTTOM_CAMERA_TOPIC)" />

        <arg name="ROS_OUTPUT" value="$(arg ROS_OUTPUT)" />
        <arg name="SHOW" value="$(arg SHOW)" />
        <arg name="DEBUG" value="$(arg DEBUG)" />
        <arg name="RECORD_RAW" value="$(arg RECORD_RAW)" />
        <arg name="RECORD_OUTPUT" value="$(arg RECORD_OUTPUT)" />
        <arg name="RECORD_DIR" value="$(arg RECORD_DIR)" />
    </include>

    <!-- OBJECT DETECTION -->
    <include file="$(find stingray_startup)/launch/object_detection.launch">
        <arg name="IMAGE_TOPIC_LIST" value="$(arg FRONT_CAMERA_TOPIC) $(arg BOTTOM_CAMERA_TOPIC)" />
        <arg name="WEIGHTS_PACKAGE_NAME" value="$(arg WEIGHTS_PACKAGE_NAME)" />
        <arg name="ROS_OUTPUT" value="$(arg ROS_OUTPUT)" />
        <arg name="DEBUG" value="$(arg DEBUG)" />
    </include>

    <!-- MAIN -->
    <include file="$(find stingray_startup)/launch/main.launch">
        <arg name="ROS_OUTPUT" value="$(arg ROS_OUTPUT)" />
        <arg name="DEBUG" value="$(arg DEBUG)" />
        <arg name="STREAM" value="$(arg STREAM)" />
        <arg name="SIMULATION" value="$(arg SIMULATION)" />
        <arg name="HARDWARE_CONNECTION" value="$(arg HARDWARE_CONNECTION)" />
        <arg name="QR_LAUNCH" value="$(arg QR_LAUNCH)" />
        <arg name="QR_CAMERA" value="$(arg QR_CAMERA)" />
        <arg name="QR_LAUNCH_PACKAGE_NAME" value="$(arg QR_LAUNCH_PACKAGE_NAME)" />
        <arg name="QR_NAME_PATTERN" value="$(arg QR_NAME_PATTERN)" />
    </include>

    <!-- MISSIONS -->
    <group unless="$(arg QR_LAUNCH)">
        <node pkg="sauvc_missions" type="sauvc_controller.py" name="sauvc_controller" output="$(arg ROS_OUTPUT)" respawn="false">
            <param name="gate" value="$(arg GATE)" />
            <param name="flare" value="$(arg FLARE)" />
            <param name="drums" value="$(arg DRUMS)" />
            <param name="qual" value="$(arg QUAL)" />
            <param name="test" value="$(arg TEST)" />
            <param name="verbose" value="$(arg VERBOSE)" />
            <param name="front_camera" value="$(arg FRONT_CAMERA_TOPIC)" />
            <param name="bottom_camera" value="$(arg BOTTOM_CAMERA_TOPIC)" />
        </node>
    </group>
</launch>