<!--
    This .
-->
<launch>

    <!-- Defines device that will be used as camera -->
    <arg name="device" default="/dev/video0" />

    <!-- Defines FPS -->
    <arg name="fps" default="25" />

    <!-- Enables video streaming -->
    <arg name="stream" default="false" />

    <!-- Enables video recording -->
    <arg name="record" default="false" />
    
    <!-- launch video stream -->
    <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="file" />
        <!-- means video device 0, /dev/video0 -->
        <arg name="video_stream_provider" value="/home/vladushked/Downloads/Telegram Desktop/stingray_video_records/device_bottom_camera_image_raw_2020_02_08_13_11_56.avi" />
        <!-- set camera fps to (if the device allows) -->
        <arg name="set_camera_fps" value="30"/>
        <!-- set buffer queue size of frame capturing to -->
        <arg name="buffer_queue_size" value="100" />
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="30" />
        <!-- setting frame_id -->
        <arg name="frame_id" value="webcam" />
        <!-- visualize on an image_view window the stream generated -->
        <arg name="visualize" value="true" />
    </include>

    <!-- Gate detector node -->
    <node name="gate_detector" pkg="sauvc_vision" type="gate_detector.py" output="screen" respawn="true">
        <param name="camera_sub_topic" value="/device_camera/image_raw" />
        <param name="gate_pub_topic" value="/bottom_equipment/gate" />
        <param name="dnn_pub_topic" value="/dnn/image" />
        <param name="video_device" value="$(arg device)" />
        <param name="dnn_confidence" value="0.5" />
    </node>

    <!-- Red flare detector node -->
    <node name="red_flare_detector" pkg="sauvc_vision" type="red_flare_detector.py" output="screen" respawn="true">
        <param name="camera_sub_topic" value="/device_camera/image_raw" />
        <param name="red_flare_pub_topic" value="/bottom_equipment/red_flare" />
        <param name="dnn_pub_topic" value="/dnn/image" />
        <param name="video_device" value="$(arg device)" />
        <param name="dnn_confidence" value="0.5" />
    </node>

    <group if="$(arg record)">
        <!-- Video recorder node -->
        <node name="video_recorder" pkg="stingray_utils" type="video_recorder.py" output="screen" respawn="true">
            <param name="source_topic" value="/gate_detector/image" />
            <param name="output_width" value="640" />
            <param name="output_height" value="480" />
            <param name="output_fps" value="$(arg fps)" />
            <param name="output_format" value="h264" />
            <param name="record_dir" value="$(env HOME)/stingray_video_records/" />
        </node>
    </group>

    <group if="$(arg stream)">
        <!-- Video web server -->
        <!-- Stream will be available at http://<hostname>:8080/stream_viewer?topic=/device_camera/image_raw -->
        <node name="video_server" pkg="web_video_server" type="web_video_server" output="screen" respawn="true">
            <param name="server_threads" value="4" />
            <param name="ros_threads" value="10" />
        </node>
    </group>

</launch>